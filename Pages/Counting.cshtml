@page
@model SjcVotersPortal.Pages.Counting

@{
    ViewData["Title"] = "Counting";
    var isFirst = true;
}

<h1>@ViewData["Title"]</h1>

<ul class="nav nav-tabs" id="myTab" role="tablist">
    @foreach (var item in Model.Data)
    {
        <li class="nav-item" role="presentation">
            <button class="nav-link @(isFirst ? "active" : "")" id="t@(item.Key.ElectionId)-tab" data-bs-toggle="tab"
                data-bs-target="#t@(item.Key.ElectionId)" type="button" role="tab" aria-controls="t@(item.Key.ElectionId)"
                aria-selected="@(isFirst ? "true" : "")">@(item.Key.AssociationName)</button>
        </li>
        isFirst = false;
    }
</ul>

<div class="tab-content">
    @{
        isFirst = true;
    }
    @foreach (var item in Model.Data)
    {
        <div class="tab-pane @(isFirst ? "active" : "")" id="t@(item.Key.ElectionId)" role="tabpanel"
            aria-labelledby="t@(item.Key.ElectionId)-tab" tabindex="0">
            <table class="table table-bordered mt-2">
                <thead>
                    <tr>
                        <th>Designation</th>
                        <th>Vote Details</th>
                    </tr>
                </thead>
                @foreach (var item2 in item.Value)
                {
                    <tr>
                        <td>@item2.Key.DesignantionName</td>
                        <td>
                            @if (item2.Value.Any())
                            {
                                <table class="table table-sm table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Candidate</th>
                                            <th>Vote count</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item3 in item2.Value)
                                        {
                                            <tr>
                                                <td>
                                                    @item3.RollNumber, @item3.Student.Name, @item3.Student.Batch
                                                </td>
                                                <td>@item3.Votes.Count</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <div style="max-height: 10em;">
                                    <canvas id="myChart-@item2.Key.DesignationId"></canvas>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
        isFirst = false;
    }
</div>

@section Scripts
{
    <script src="~/lib/Chart.js/chart.umd.min.js"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>*@

    @foreach (var item in Model.Data)
    {
        @foreach (var item2 in item.Value)
        {
            @if (item2.Value.Any())
            {
                <script>
    ctx = document.getElementById('myChart-@item2.Key.DesignationId');

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: [@Html.Raw(string.Join(",", item2.Value.Select(e => "'" + e.Student.Name + "'"))) ],
            datasets: [{
                label: '# of Votes',
                data: [@string.Join(",", item2.Value.Select(e => e.Votes.Count)) ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(201, 203, 207, 0.2)'
                ],
                borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 159, 64)',
                    'rgb(255, 205, 86)',
                    'rgb(75, 192, 192)',
                    'rgb(54, 162, 235)',
                    'rgb(153, 102, 255)',
                    'rgb(201, 203, 207)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            indexAxis: 'y',
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
            }
        }
    }
    }